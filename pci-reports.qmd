---
title: "PCI Reports"
format:
  docx:
    toc: true
    number-sections: true
    highlight-style: github
editor: visual
execute: 
  echo: false
---

```{r Data download, include=FALSE}
#Setup Temporary Directory for file storage
temp <- tempdir()
#Load in the helper functions/data required
source("HelperFunctions.R")
#Set data source type Powerbi or Sharepoint
data_source <- "Powerbi"

if(data_source == "Sharepoint"){
  #Sharepoint Token
tk_sp <- qiverse.azure::get_az_tk('sp')
#Load data from CSV
fsh_data <- qiverse.sharepoint::download_sharepoint_file(
  site_url = 'https://wahealthdept.sharepoint.com/sites/WACardiacOutcomeRegistry',
  file_url = 'https://wahealthdept.sharepoint.com/:x:/r/sites/WACardiacOutcomeRegistry/PCI/PCI%20Data/Latest%20NCR%20Submission/Fiona_Stanley_Hospital_2024_PCI_Data.csv?d=w502a1115d07d84e37976119fd0e5ed4e4&csf=1&web=1&e=CipGly',
  token = tk_sp)
rph_data <- qiverse.sharepoint::download_sharepoint_file(
  site_url = 'https://wahealthdept.sharepoint.com/sites/WACardiacOutcomeRegistry',
  file_url = 'https://wahealthdept.sharepoint.com/:x:/r/sites/WACardiacOutcomeRegistry/PCI/PCI%20Data/Latest%20NCR%20Submission/Royal_Perth_Hospital_2024_PCI_Data.csv?d=w7b047d9021874a58bd3241d2ad4837ef&csf=1&web=1&e=HXmpC4',
  token = tk_sp)
scgh_data <- qiverse.sharepoint::download_sharepoint_file(
  site_url = 'https://wahealthdept.sharepoint.com/sites/WACardiacOutcomeRegistry',
  file_url = 'https://wahealthdept.sharepoint.com/:x:/r/sites/WACardiacOutcomeRegistry/PCI/PCI%20Data/Latest%20NCR%20Submission/Sir_Charles_Gairdner_Hospital_2024_PCI_Data.csv?d=w970e2c01ddec4e8aa6456876e8c793b5&csf=1&web=1&e=Jc7bIW',
  token = tk_sp)

#Read in data from CSV
pci_data <- readr::read_csv(c(fsh_data, rph_data, scgh_data), col_types = colTypes)
} else if(data_source == "Powerbi"){
#PowerBI Token
tk = qiverse.azure::get_az_tk('pbi_df')
#Load data from PowerBI
data <- qiverse.powerbi::download_dataflow_table(workspace_name = "PCI Data Set",
                                              dataflow_name = "NCR Template and Hid files",
                                              table_name = "required_columns",
                                              access_token = tk$credentials$access_token)
#Workaround for setting csv col types
readr::write_csv(data, paste0(temp, ".csv"))
#Read in data from PowerBI
pci_data <- readr::read_csv(paste0(temp, ".csv"), col_types = colTypes)
}

indicator_metadata <- qiverse.powerbi::download_dataflow_table(workspace_name = "DOH - Safety and Quality",
                                              dataflow_name = "sharepoint_lists",
                                              table_name = "squis_indicator_list",
                                              access_token = tk$credentials$access_token)
indicator_metadata <- indicator_metadata |> dplyr::filter(substr(Indicator_ID, 1, 3) == "NCR")

```

```{r Data transformation, include=FALSE}
# Required Data Transformations
#Creating period start and end, first and last date of the month
pci_data <- pci_data |> 
  dplyr::mutate(period_start = lubridate::floor_date(dop, unit = "month"),
                period_end = lubridate::ceiling_date(period_start, unit = "month")-1)


#Creating required columns for Indicator calculations
pci_data <- pci_data |>
  dplyr::mutate(
    ## Create dbd based on whether the tbd time occurred before/after top time
    dbd = dplyr::case_when(
      tbd <= top ~ dop + lubridate::days(1),
      tbd > top ~ dop, 
      tbd = NA ~ NA),
    ## Calculate column required for ECG to PCI time
    ecgdb = difftime(tbd, tecgd, units = "mins") + difftime(dbd, decgd, units = "mins"),
    ## Calculate column required for Door to PCI time
    dbdt = difftime(tbd, toa, units = "mins") + difftime(dbd, doa, units = "mins"))

## Summary for Indicator 1
pci_data <- pci_data |>
  dplyr::mutate(NCR1_den = dplyr::if_else(pci == "1" &
                ecgdb >= 0 &
                ecgdb <= 500, 1, 0))

ecg_to_pci <- pci_data |>
  dplyr::filter(NCR1_den == 1) |>
  dplyr::group_by(hname, period_start, period_end) |>
  dplyr::summarise(indicatorID = "NCR1",
                   num = as.numeric(median(ecgdb, na.rm = T)),
                   den = 1)

## Summary for Indicator 2
pci_data <- pci_data |>
  dplyr::mutate(NCR2_den = dplyr::if_else(pci == "1" &
                dbdt >= 0 &
                dbdt <= 500, 1, 0))
                
door_to_pci <- pci_data |>
  dplyr::filter(NCR2_den == 1) |>
  dplyr::group_by(hname, period_start, period_end) |>
  dplyr::summarise(indicatorID = "NCR2",
                   num = as.numeric(median(dbdt, na.rm = T)),
                   den = 1)

## Summary for Indicator 3
pci_data <- pci_data |>
dplyr::mutate(NCR3_den = dplyr::if_else(ihstr != "",1,0))
              
peri_PCI_stroke <- pci_data |> 
  dplyr::group_by(hname, period_start, period_end) |>
  dplyr::summarise(indicatorID = "NCR3",
    num = sum(ihstr),
    den = sum(NCR3_den))

## Summary for Indicator 5
pci_data <- pci_data |>
  dplyr::mutate(NCR5_den = 1,
                NCR5_num = ifelse(dis == "6", 1, 0))

ihm <- pci_data |> 
  dplyr::group_by(hname, period_start, period_end) |>
  dplyr::summarise(indicatorID = "NCR5",
    num = sum(NCR5_num, na.rm = T),
    den = sum(NCR5_den, na.rm = T))

## Summary for Indicator 6
pci_data <- pci_data |>
  dplyr:::mutate(NCR6_den = ifelse(dis != "6", 1, 0),
                 NCR6_num = ifelse(NCR6_den == 1 &
                              crh30 == "1" &
                              pc30 != "1", 1, 0))

unplanned_readmission <- pci_data |> 
  dplyr::group_by(hname, period_start, period_end) |>
  dplyr::summarise(indicatorID = "NCR6",
    num = sum(NCR6_num, na.rm = T),
    den = sum(NCR6_den, na.rm = T))

#NCR 8
pci_data <- pci_data |> 
  dplyr::mutate(NCR8_den = 1,
                NCR8_num = dplyr::if_else((dop + 30) <= dmort30 |
                                          dis == "6", 1, 0, missing = 0))

#Group data for the funnel plot function
mort_30_day <- pci_data |> 
  dplyr::group_by(hname, period_start, period_end) |>
  dplyr::summarise(indicatorID = "NCR8",
    num = sum(NCR8_num, na.rm = T),
    den = sum(NCR8_den, na.rm = T))

#NCR 9
pci_data <- pci_data |> 
  dplyr::mutate(NCR9_den = dplyr::if_else(dis != "6" & 
                                          dstp != "2" & 
                                          doll != "2" & 
                                          is.na(dstp) == F &
                                          is.na(doll) == F &
                                          dstp != "3" & 
                                          doll != "3" & 
                                          dstp != "" & 
                                          doll != "", 1, 0, missing = 0),
                NCR9_num = dplyr::if_else(NCR9_den == 1 & 
                                         (dstp == "1" | doll == "1"), 1, 0, missing = 0))

#Group data for the funnel plot function
lipid_lowering <- pci_data |> 
  dplyr::group_by(hname, period_start, period_end) |>
  dplyr::summarise(indicatorID = "NCR9",
    num = sum(NCR9_num, na.rm = T),
    den = sum(NCR9_den, na.rm = T))

#NCR 10
pci_data <- pci_data |> 
  dplyr::mutate(NCR10_den = dplyr::if_else(dis != "6" &
                                           crehab != "-1" &
                                           crehab != "", 1, 0, missing = 0),
                NCR10_num = dplyr::if_else(NCR10_den == 1 & 
                                           crehab == "1", 1, 0, missing = 0))

#Group data for the funnel plot function
cardiac_rehab <- pci_data |> 
  dplyr::group_by(hname, period_start, period_end) |>
  dplyr::summarise(indicatorID = "NCR10",
    num = sum(NCR10_num, na.rm = T),
    den = sum(NCR10_den, na.rm = T))

#NCR 11
pci_data <- pci_data |> 
  dplyr::mutate(NCR11_den = dplyr::if_else(dis != "6" & 
                                           dasp != "2" & 
                                           doap != "2" & 
                                           is.na(dasp) == F &
                                           is.na(doap) == F &
                                           dasp != "3" & 
                                           doap != "3" & 
                                           dasp != "" & 
                                           doap != "", 1, 0, missing = 0),
                NCR11_num = dplyr::if_else(NCR11_den == 1 & 
                                          (dasp == "1" | doap == "1"), 1, 0, missing = 0))

#Group data for the funnel plot function
antiplatelet <- pci_data |> 
  dplyr::group_by(hname, period_start, period_end) |>
  dplyr::summarise(indicatorID = "NCR11",
    num = sum(NCR11_num, na.rm = T),
    den = sum(NCR11_den, na.rm = T))

#Data not available to plot

#NCR 4
pci_data <- pci_data |> 
  dplyr::mutate(NCR4_den = dplyr::if_else(is.na(ihbl) == F, 1, 0, missing = 0),
                NCR4_num = dplyr::if_else(NCR4_den == 1 &
                                          stringr::str_detect(ihbl, "[2345678]"), 1, 0, missing = 0))

#Group data for the funnel plot function
ih_bleeding <- pci_data |> 
  dplyr::group_by(hname, period_start, period_end) |>
  dplyr::summarise(indicatorID = "NCR4",
    num = sum(NCR4_num, na.rm = T),
    den = sum(NCR4_den, na.rm = T))


#NCR 7
pci_data <- pci_data |> 
  dplyr::mutate(NCR7_den = 1,
                NCR7_num = dplyr::if_else((ihpci == 1 &
                                          ihpcip == 0 &
                                          ihtvr == 1) |
                                          (ihcab == 1 &
                                          ihpcab == 0 &
                                          ihtvcab == 1) |
                                          (crh30 == 1 &
                                          pc30 == 0 &
                                          (tvr30 == 1 | tvcab30 == 1)), 1, 0, missing = 0))

unplanned_revasc <- pci_data |> 
  dplyr::group_by(hname, period_start, period_end) |>
  dplyr::summarise(indicatorID = "NCR7",
    num = sum(NCR7_num, na.rm = T),
    den = sum(NCR7_den, na.rm = T))


pci_data_group <- rbind(unplanned_revasc, ih_bleeding, antiplatelet, cardiac_rehab,
        lipid_lowering, mort_30_day, unplanned_readmission, ihm,
        peri_PCI_stroke, door_to_pci, ecg_to_pci)
  


```


## Time from diagnostic ECG to PCI mediated reperfusion

### SPC

```{r NCR1 SPC}
## Generate the SPC chart
controlcharts::spc(data = dplyr::filter(pci_data_group, indicatorID == "NCR1"),
                   keys = period_end,
                   numerators = num,
                   denominators = den,
                   spc_settings = list(chart_type = "i"),
                   outlier_settings = list(improvement_direction = "decrease",
                                           astronomical = TRUE,
                                           shift = TRUE,
                                           trend = TRUE,
                                           two_in_three = TRUE),
                   nhs_icon_settings = list(show_variation_icons = TRUE),
                   date_settings = list(date_format_day = "(blank)",
                                    date_format_month = "Mon",
                                    date_format_year = "YY"))$static_plot

```

## Time from door to PCI mediated reperfusion

### SPC

```{r NCR2 SPC}
## Generate the SPC chart
controlcharts::spc(data = dplyr::filter(pci_data_group, indicatorID == "NCR2"),
                   keys = period_end,
                   numerators = num,
                   denominators = den,
                   spc_settings = list(chart_type = "i"),
                   outlier_settings = list(improvement_direction = "decrease",
                                           astronomical = TRUE,
                                           shift = TRUE,
                                           trend = TRUE,
                                           two_in_three = TRUE),
                   nhs_icon_settings = list(show_variation_icons = TRUE),
                   date_settings = list(date_format_day = "(blank)",
                                    date_format_month = "Mon",
                                    date_format_year = "YY"))$static_plot
```

## Peri-PCI stroke

### Funnel

``` {r NCR3 Funnel}
## Generate the Funnel chart
controlcharts::funnel(data = dplyr::filter(pci_data_group, indicatorID == "NCR3"),
                      keys = hname,
                      numerators = num,
                      denominators = den,
                      outlier_settings = list(improvement_direction = "decrease",
                                              three_sigma = TRUE)
                      )$static_plot

```

The funnel plot above displays the information for **Peri-PCI Stroke** between **`r min(peri_PCI_stroke$period_start)`** and **`r max(peri_PCI_stroke$period_end)`**.
The mean (or center line) value statewide is **`r round(sum(peri_PCI_stroke$num)/sum(peri_PCI_stroke$den)*100,2)`**.

``` {r NCR3 SPC}
## Generate the SPC chart
controlcharts::spc(data = dplyr::filter(pci_data_group, indicatorID == "NCR3"),
                   keys = period_end,
                   numerators = num,
                   denominators = den,
                   spc_settings = list(chart_type = "p"),
                   outlier_settings = list(improvement_direction = "decrease",
                                           astronomical = TRUE,
                                           shift = TRUE,
                                           trend = TRUE,
                                           two_in_three = TRUE),
                   nhs_icon_settings = list(show_variation_icons = TRUE),
                   date_settings = list(date_format_day = "(blank)",
                                    date_format_month = "Mon",
                                    date_format_year = "YY"))$static_plot

```

The Statistical Process Control (SPC) chart above displays the information for **Peri-PCI Stroke** between **`r min(peri_PCI_stroke$period_start)`** and **`r max(peri_PCI_stroke$period_end)`**. 
There was a total numerator of **`r format(sum(peri_PCI_stroke$num), scientific = F, big.mark = ",")`**. 
There was a total denominator of **`r format(sum(peri_PCI_stroke$den), scientific = F, big.mark = ",")`**.
The mean (or center line) value statewide is **`r round(sum(peri_PCI_stroke$num)/sum(peri_PCI_stroke$den)*100, 2)`**.

## In-Hospital Major Bleeding

### Funnel

``` {r NCR4 Funnel}
## Generate the Funnel chart
controlcharts::funnel(data = dplyr::filter(pci_data_group, indicatorID == "NCR4"),
                      keys = hname,
                      numerators = num,
                      denominators = den,
                      outlier_settings = list(improvement_direction = "decrease",
                                              three_sigma = TRUE)
                      )$static_plot

```

### SPC

``` {r NCR4 SPC}
## Generate the SPC chart
controlcharts::spc(data = dplyr::filter(pci_data_group, indicatorID == "NCR4"),
                   keys = period_end,
                   numerators = num,
                   denominators = den,
                   spc_settings = list(chart_type = "p"),
                   outlier_settings = list(improvement_direction = "decrease",
                                           astronomical = TRUE,
                                           shift = TRUE,
                                           trend = TRUE,
                                           two_in_three = TRUE),
                   nhs_icon_settings = list(show_variation_icons = TRUE),
                   date_settings = list(date_format_day = "(blank)",
                                    date_format_month = "Mon",
                                    date_format_year = "YY"))$static_plot
```

## In-hospital mortality

### Funnel

``` {r NCR5 Funnel}
## Generate the Funnel chart 
controlcharts::funnel(data = dplyr::filter(pci_data_group, indicatorID == "NCR5"),
                      keys = hname,
                      numerators = num,
                      denominators = den,
                      outlier_settings = list(improvement_direction = "decrease",
                                              three_sigma = TRUE)
                      )$static_plot
```
### SPC

``` {r NCR5 SPC}
## Generate the SPC chart 
controlcharts::spc(data = dplyr::filter(pci_data_group, indicatorID == "NCR5"),
                   keys = period_end,
                   numerators = num,
                   denominators = den,
                   spc_settings = list(chart_type = "p"),
                   outlier_settings = list(improvement_direction = "decrease",
                                           astronomical = TRUE,
                                           shift = TRUE,
                                           trend = TRUE,
                                           two_in_three = TRUE),
                   nhs_icon_settings = list(show_variation_icons = TRUE),
                   date_settings = list(date_format_day = "(blank)",
                                    date_format_month = "Mon",
                                    date_format_year = "YY"))$static_plot
```

## 30 day unplanned cardiac readmission rate after PCI

Cardiac readmission data is currently undergoing review. 
This data was not included in the 2024 NCR data submission. 

### Funnel

``` {r NCR6 Funnel}
## Generate the Funnel chart
controlcharts::funnel(data = dplyr::filter(pci_data_group, indicatorID == "NCR6"),
                      keys = hname,
                      numerators = num,
                      denominators = den,
                      outlier_settings = list(improvement_direction = "decrease",
                                              three_sigma = TRUE)
                      )$static_plot
```

### SPC

``` {r NCR6 SPC}
## Generate the SPC chart 
controlcharts::spc(data = dplyr::filter(pci_data_group, indicatorID == "NCR6"),
                   keys = period_end,
                   numerators = num,
                   denominators = den,
                   spc_settings = list(chart_type = "p"),
                   outlier_settings = list(improvement_direction = "decrease",
                                           astronomical = TRUE,
                                           shift = TRUE,
                                           trend = TRUE,
                                           two_in_three = TRUE),
                   nhs_icon_settings = list(show_variation_icons = TRUE),
                   date_settings = list(date_format_day = "(blank)",
                                    date_format_month = "Mon",
                                    date_format_year = "YY"))$static_plot
```
## 30 day unplanned revascularisation rate after PCI

### Funnel

``` {r NCR7 Funnel}
## Generate the Funnel chart
controlcharts::funnel(data = dplyr::filter(pci_data_group, indicatorID == "NCR7"),
                      keys = hname,
                      numerators = num,
                      denominators = den,
                      outlier_settings = list(improvement_direction = "decrease",
                                              three_sigma = TRUE)
                      )$static_plot
```

### SPC

``` {r NCR7 SPC}
## Generate the SPC chart
controlcharts::spc(data = dplyr::filter(pci_data_group, indicatorID == "NCR7"),
                   keys = period_end,
                   numerators = num,
                   denominators = den,
                   spc_settings = list(chart_type = "p"),
                   outlier_settings = list(improvement_direction = "decrease",
                                           astronomical = TRUE,
                                           shift = TRUE,
                                           trend = TRUE,
                                           two_in_three = TRUE),
                   nhs_icon_settings = list(show_variation_icons = TRUE),
                   date_settings = list(date_format_day = "(blank)",
                                    date_format_month = "Mon",
                                    date_format_year = "YY"))$static_plot

```

## 30 Day Mortality

### Funnel

```{r NCR8 Funnel}
## Generate the Funnel chart
controlcharts::funnel(data = dplyr::filter(pci_data_group, indicatorID == "NCR8"),
                      keys = hname,
                      numerators = num,
                      denominators = den,
                      outlier_settings = list(improvement_direction = "decrease",
                                              three_sigma = TRUE)
                      )$static_plot
```

### SPC

```{r NCR8 SPC}
## Generate the SPC chart
controlcharts::spc(data = dplyr::filter(pci_data_group, indicatorID == "NCR8"),
                   keys = period_end,
                   numerators = num,
                   denominators = den,
                   spc_settings = list(chart_type = "p"),
                   outlier_settings = list(improvement_direction = "decrease",
                                           astronomical = TRUE,
                                           shift = TRUE,
                                           trend = TRUE,
                                           two_in_three = TRUE),
                   nhs_icon_settings = list(show_variation_icons = TRUE),
                   date_settings = list(date_format_day = "(blank)",
                                    date_format_month = "Mon",
                                    date_format_year = "YY"))$static_plot
```

## Patients Referred to Cardiac Rehabilitation

### Funnel

```{r NCR10 Funnel}
## Generate the Funnel chart
controlcharts::funnel(data = dplyr::filter(pci_data_group, indicatorID == "NCR10"),
                      keys = hname,
                      numerators = num,
                      denominators = den,
                      outlier_settings = list(improvement_direction = "increase",
                                              three_sigma = TRUE)
                      )$static_plot
```

### SPC

```{r NCR10 SPC}
## Generate the SPC chart 
controlcharts::spc(data = dplyr::filter(pci_data_group, indicatorID == "NCR10"),
                   keys = period_end,
                   numerators = num,
                   denominators = den,
                   spc_settings = list(chart_type = "p"),
                   outlier_settings = list(improvement_direction = "increase",
                                           astronomical = TRUE,
                                           shift = TRUE,
                                           trend = TRUE,
                                           two_in_three = TRUE),
                   nhs_icon_settings = list(show_variation_icons = TRUE),
                   date_settings = list(date_format_day = "(blank)",
                                    date_format_month = "Mon",
                                    date_format_year = "YY"))$static_plot
```

## Patients Discharged on Lipid-Lowering Therapy

### Funnel

```{r NCR9 Funnel}
## Generate the Funnel chart
controlcharts::funnel(data = dplyr::filter(pci_data_group, indicatorID == "NCR9"),
                      keys = hname,
                      numerators = num,
                      denominators = den,
                      outlier_settings = list(improvement_direction = "increase",
                                              three_sigma = TRUE)
                      )$static_plot
```

### SPC

```{r NCR9 SPC}
## Generate the SPC chart 
controlcharts::spc(data = dplyr::filter(pci_data_group, indicatorID == "NCR9"),
                   keys = period_end,
                   numerators = num,
                   denominators = den,
                   spc_settings = list(chart_type = "p"),
                   outlier_settings = list(improvement_direction = "increase",
                                           astronomical = TRUE,
                                           shift = TRUE,
                                           trend = TRUE,
                                           two_in_three = TRUE),
                   nhs_icon_settings = list(show_variation_icons = TRUE),
                   date_settings = list(date_format_day = "(blank)",
                                    date_format_month = "Mon",
                                    date_format_year = "YY"))$static_plot
```

## Patients Discharged on Dual Antiplatelet Therapy

### Funnel

```{r NCR11 Funnel}
## Generate the Funnel chart
controlcharts::funnel(data = dplyr::filter(pci_data_group, indicatorID == "NCR11"),
                      keys = hname,
                      numerators = num,
                      denominators = den,
                      outlier_settings = list(improvement_direction = "increase",
                                              three_sigma = TRUE)
                      )$static_plot
```

### SPC

```{r NCR11 SPC}
## Generate the SPC chart 
controlcharts::spc(data = dplyr::filter(pci_data_group, indicatorID == "NCR11"),
                   keys = period_end,
                   numerators = num,
                   denominators = den,
                   spc_settings = list(chart_type = "p"),
                   outlier_settings = list(improvement_direction = "increase",
                                           astronomical = TRUE,
                                           shift = TRUE,
                                           trend = TRUE,
                                           two_in_three = TRUE),
                   nhs_icon_settings = list(show_variation_icons = TRUE),
                   date_settings = list(date_format_day = "(blank)",
                                    date_format_month = "Mon",
                                    date_format_year = "YY"))$static_plot
```
